xd
# About the project
This is a great course to learn R!
[My Github repository](https://github.com/villetaro/IODS-projects)
# About the project
"This is a great course to learn R!"
[My Github repository](https://github.com/villetaro/IODS-projects)
https://github.com/villetaro/IODS-projects
[My Github repository](https://github.com/villetaro/IODS-projects)
# About the project
"This is a great course to learn R!"
https://github.com/villetaro/IODS-projects
[[My Github repository](https://github.com/villetaro/IODS-projects)
# About the project
"This is a great course to learn R!"
https://github.com/villetaro/IODS-projects
[My Github repository](https://github.com/villetaro/IODS-projects)
# About the project
"This is a great course to learn R!"
https://github.com/villetaro/IODS-project
[My Github repository](https://github.com/villetaro/IODS-project)
# About the project
"This is a great course to learn R!"
https://github.com/villetaro/IODS-project
datacps08 = t(matrix(scan("~/GitHub/Ekonometria 2017 kevät/CPS08.csv"),nrow=4))
colnames(datacps08) = c("AHE","bachelor","female","age")
AHE = datacps08[,"AHE"]
age = datacps08[,"age"]
newDataFrame <- as.data.frame(datacps08)
my_model <- lm(AHE ~ age, data = newDataFrame)
summary(my_model)
my_model2 <- lm(AHE ~ age + female + bachelor, data = newDataFrame)
summary(my_model2)
library(sandwich)
library(lmtest)
model = lm(AHE ~ age + female + bachelor, data = newDataFrame)
model$newse = vcovHC(model,type="HC1")
coeftest(model,model$newse)
summary(model)
model = lm(AHE ~ age + female + bachelor, data = newDataFrame)
model$newse = vcovHC(model,type="HC1")
coeftest(model,model$newse)
summary(model)
Testii <- subset(newDataFrame, bachelor == 0)
model5 <- lm(AHE ~ age, data = Testii)
model5$newse = vcovHC(model5)
coeftest(model5,model5$newse)
Testii2 <- subset(newDataFrame, bachelor == 1)
model6 <- lm(AHE ~ age, data = Testii2)
model6$newse = vcovHC(model6)
coeftest(model6,model6$newse)
model = lm(AHE ~ age + female + bachelor, data = newDataFrame)
model$newse = vcovHC(model,type="HC1")
coeftest(model,model$newse)
model1 = lm(AHE ~ age, data = newDataFrame)
model1$newse = vcovHC(model1,type="HC1")
coeftest(model1,model1$newse)
summary(model1)
model = lm(AHE ~ age + female + bachelor, data = newDataFrame)
model$newse = vcovHC(model,type="HC1")
coeftest(model,model$newse)
summary(model)
datacps08 = t(matrix(scan("~/GitHub/Ekonometria 2017 kevät/CPS08.csv"),nrow=4))
colnames(datacps08) = c("AHE","bachelor","female","age")
AHE = datacps08[,"AHE"]
age = datacps08[,"age"]
newDataFrame <- as.data.frame(datacps08)
model_unrestricted = lm(AHE ~ age + female + bachelor, data = newDataFrame)
betahat = model_unrestricted$coeff
k = length(betahat)-1
q = 2
r = rep(0,q)
R = matrix(0,nc=k+1,nr=q)
R[1,3] = 1
R[2,4] = 1
R
model$newse = vcovHC(model_unrestricted,type = "const")                     # Kokeile type = "HC1" ja vertaa S&W sivu 268
COVbetahat = model$newse
F = t(R%*%betahat-r)%*%solve(R%*%COVbetahat%*%t(R))%*%(R%*%betahat-r)/q
pf(F, df1 = q, df2 = Inf, lower.tail = FALSE, log.p = FALSE)
F
model$newse = vcovHC(model_unrestricted,type = "HC1")                     # Kokeile type = "HC1" ja vertaa S&W sivu 268
COVbetahat = model$newse
F = t(R%*%betahat-r)%*%solve(R%*%COVbetahat%*%t(R))%*%(R%*%betahat-r)/q
pf(F, df1 = q, df2 = Inf, lower.tail = FALSE, log.p = FALSE)
F
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", header = T, sep=",")
dim(human)
str(human)
library(ggplot2)
library(GGally)
library(MASS)
library(corrplot)
library(tidyverse)
library(tidyverse)
library(plotly)
library(dplyr)
ggpairs(human)
ggpairs(human) +   geom_point() +
geom_smooth(method=loess, fill="red", color="red", ...) +
geom_smooth(method=lm, fill="blue", color="blue", ...)
ggpairs(human) + geom_point()
ggpairs(human)
View(human)
View(human)
ggpairs(human), axisLabels="show")
ggpairs(human), axisLabels="show")
ggpairs(human) axisLabels="show")
ggpairs((human), axisLabels="show")
ggpairs(human))
ggpairs(human)
ggpairs(human,
upper = list(params = c(size = 10)),
lower = list(continuous = "smooth", params = c(method = "loess", fill = "blue"))
sdad
ggpairs(human,
upper = list(params = c(size = 10)),
lower = list(continuous = "smooth", params = c(method = "loess", fill = "blue"))
ggpairs(human,
?ggpairs()
ggpairs(human)
View(human)
View(human)
summary(human)
pca_human <- prcomp(human_std)
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2)
human_std <- scale(human)
pca_human11 <- prcomp(human_std)
biplot(pca_human11, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
install.packages("factominer")
install.packages("FactoMiner")
install.packages("FactoMineR")
library(FactoMineR)
library(FactoMineR)
data("tea")
dim(tea)
str(tea)
plot(tea)
ggpairs(tea)
tableplot(tea)
require(ggplot2)
tableplot(tea)
?tableplot()
install.packages("tabplot")
library(tabplot)
tableplot(tea)
tablePalettes(tea)
tablepale
lot
tableplot(tea)
```{r}
p <- ggpairs(human, mapping = aes(col="blue", alpha=0.3), lower = list(combo = wrap("facethist", bins = 20))))
p <- ggpairs(human, mapping = aes(col="blue", alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
p2 <- ggplot(human, aes(x=Edu.Exp, y= Life.Exp )) + geom_point(col="deepskyblue1")
p2
p2 <- ggplot(human, aes(x=Edu.Exp, y= GNI)) + geom_point(col="deepskyblue1")
p2
p2 <- ggplot(human, aes(x=GNI, y= Life.Exp)) + geom_point(col="deepskyblue1")
p2
lines(Data$x, predict(p2), col = "red")
lines(human$Life.Exp, predict(p2), col = "red")
lines(human$Life.Exp, predict(p2), col = "red") + geom_point() + geom_smooth()
p2
p2 <- ggplot(human, aes(x=GNI, y= Life.Exp)) + geom_point(col="deepskyblue1")
lines(human$Life.Exp, predict(p2), col = "red") + geom_point() + geom_smooth()
p2 <- ggplot(human, aes(x=GNI, y= Life.Exp)) + geom_point(col="deepskyblue1")
lines(human$Life.Exp, predict(p2), col = "red") + geom_point() + geom_smooth()
geom_smooth()
p2
p2 <- ggplot(human, aes(x=GNI, y= Life.Exp)) + geom_point(col="deepskyblue1") + geom_smooth()
p2
p2 <- ggplot(human, aes(x=GNI, y= Edu.Exp)) + geom_point(col="red2") + geom_smooth()
p2
p2 <- ggplot(human, aes(x=GNI, y= Edu.Exp)) + geom_point(col="red2") + geom_smooth(col = "green")
p2
p2 <- ggplot(human, aes(x=GNI, y= Life.Exp)) + geom_point(col="deepskyblue1") + geom_smooth( col = "red2")
p2
p3 <- ggplot(human, aes(x=GNI, y= Edu.Exp)) + geom_point(col="red2") + geom_smooth(col = "royalblue1")
p3
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("grey", "red2")))
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("grey", "red2"))
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("grey100", "red2"))
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("grey60", "red2"))
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("black", "red2"))
biplot(pca_human11, choices = 1:2, cex = c(0.6, 1.2), col = c("black", "red2"))
pca_human11 <- prcomp(human_std)
biplot(pca_human11, choices = 1:2, cex = c(0.6, 1.2), col = c("black", "red2"))
summary(pca_human11)
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("black", "red2"),main="Biplot of the first two principal components for the unscaled data")
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("black", "red2"), main="Biplot of the first two principal components for the unscaled data")
biplot(pca_human11, choices = 1:2, cex = c(0.6, 1.2), col = c("black", "red2"),main="Biplot of the first two principal components for the scaled data")
```{r, warning=FALSE}
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("black", "red2"), main="Biplot of the first two principal components for the unscaled data")
str(tea)
keep <- c("friends", "Tea", "resto", "age_Q", "frequency")
teatime <- dplyr::select(tea, one_of(keep))
str(teatime)
teatimes <- dplyr::select(tea, one_of(keep))
str(teatimes)
t1 <- ggplot(teatimes, aes(friends)) + geom_bar() + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
t2 <- ggplot(teatimes, aes(Tea)) + geom_bar()+ theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
t3 <- ggplot(teatimes, aes(resto)) + geom_bar()+ theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
t4 <- ggplot(teatimes, aes(age_Q)) + geom_bar()+ theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
t5 <- ggplot(teatimes, aes(frequency)) + geom_bar()+ theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
multiplot(t1, t2, t3, t4, t5, cols=3)
?multiplot
??multiplot
library(ggplot2)
library(GGally)
library(MASS)
library(corrplot)
library(tidyverse)
library(plotly)
library(dplyr)
library(FactoMineR)
require(ggplot2)
library(tabplot)
multiplot(t1, t2, t3, t4, t5, cols=3)
plot(teatimes, col = "turquoise2",  lwd = 3)
ggpairs(teatimes, col = "turquoise2",  lwd = 3)
ggpairs(teatimes)
```{r, include= FALSE}
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
g1 <- ggplot(teatime, aes(friends)) + geom_bar() + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g2 <- ggplot(teatime, aes(Tea)) + geom_bar()+ theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g3 <- ggplot(teatime, aes(resto)) + geom_bar()+ theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g4 <- ggplot(teatime, aes(age_Q)) + geom_bar()+ theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g5 <- ggplot(teatime, aes(frequency)) + geom_bar()+ theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
multiplot(g1, g2, g3, g4, g5, cols=3)
g1 <- ggplot(teatime, aes(friends)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
multiplot(g1, g2, g3, g4, g5, cols=3)
g1 <- ggplot(teatime, aes(friends)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g2 <- ggplot(teatime, aes(Tea)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g4 <- ggplot(teatime, aes(age_Q)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g5 <- ggplot(teatime, aes(frequency)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
multiplot(g1, g2, g3, g4, g5, cols=3)
g2 <- ggplot(teatime, aes(Tea)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
multiplot(g1, g2, g3, g4, g5, cols=3)
g1 <- ggplot(teatime, aes(friends)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g2 <- ggplot(teatime, aes(Tea)) + geom_bar()+ theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g3 <- ggplot(teatime, aes(resto)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g4 <- ggplot(teatime, aes(age_Q)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g5 <- ggplot(teatime, aes(frequency)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
multiplot(g1, g2, g3, g4, g5, cols=3)
multiplot(g1, g2, g3, g4, g5, cols=2)
multiplot(g1, g2, g3, g4, g5, cols=4)
multiplot(g1, g2, g3, g4, g5, cols=5)
multiplot(g1, g2, g3, g4, g5, cols=3)
multiplot(g1, g2, g3, g4, g5, cols=1)
multiplot(g1, g2, g3, g4, g5, cols=3)
g1 <- ggplot(teatime, aes(friends)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5))
multiplot(g1, g2, g3, g4, g5, cols=3)
g1 <- ggplot(teatime, aes(friends)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
multiplot(g1, g2, g3, g4, g5, cols=3)
g1 <- ggplot(teatime, aes(friends)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g2 <- ggplot(teatime, aes(Tea)) + geom_bar()+ theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g3 <- ggplot(teatime, aes(resto)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g4 <- ggplot(teatime, aes(age_Q)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g5 <- ggplot(teatime, aes(frequency)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
multiplot(g1, g2, g3, g4, g5, cols=3)
plot(mca, invisible=c("ind"), habillage = "quali", col = "Black"")
mca <- MCA(X = teatimes, graph=F)
plot(mca, invisible=c("ind"), habillage = "quali", col = "Black")
plot(mca, invisible=c("ind"), habillage = "quali", col = "Black")
mca <- MCA(X = teatimes, graph=F)
mca <- MCA(X = teatimes, graph=F)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
dim(human)
str(human)
?lm()
model5 <- lm(Life.exp ~ GNI, human)
model5 <- lm(Life.Exp ~ GNI, human)
summary(model5)
model5 <- lm(GNI ~ Life.Exp, human)
summary(model5)
p2 <- ggplot(human, aes(x=Life.Exp, y= GNI)) + geom_point(col="deepskyblue1") + geom_smooth( col = "red2")
p2
p2 <- ggplot(human, aes(x=GNI, y= Life.Exp)) + geom_point(col="deepskyblue1") + geom_smooth( col = "red2")
p2
model5 <- lm(GNI ~ Life.Exp, human)
summary(model5)
model5 <- lm(Life.Exp ~ GNI, human)
summary(model5)
c
c("2.816e-04*1000"")
c
c
plot(model5)
plot(model5)
plot(model5)
asas
s
das
d
asd
as
++
+
-
--
setwd("~/GitHub/IODS-project")
plot(model5)
plot(model5,  which=c(1), col = "turquoise2",  lwd = 3)
model6 <- lm(Edu.Exp ~ GNI, human)
summary(model6)
plot(model6,  which=c(1), col = "turquoise2",  lwd = 3)
pca_human <- prcomp(human)
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("black", "red2"), main="Biplot of the first two principal components for the unscaled data")
biplot(pca_human11, choices = 1:2, cex = c(0.6, 1.2), col = c("black", "red2"),main="Biplot of the first two principal components for the scaled data")
dim(tea)
keep <- c("friends", "Tea", "resto", "age_Q", "frequency")
teatimes <- dplyr::select(tea, one_of(keep))
str(teatimes)
multiplot(g1, g2, g3, g4, g5, cols=3)
g1 <- ggplot(teatimes, aes(friends)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g2 <- ggplot(teatimes, aes(Tea)) + geom_bar()+ theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g3 <- ggplot(teatimes, aes(resto)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g4 <- ggplot(teatimes, aes(age_Q)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g5 <- ggplot(teatimes, aes(frequency)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
multiplot(g1, g2, g3, g4, g5, cols=3)
mca <- MCA(X = teatimes, graph=F)
mca <- MCA(X = teatimes, graph=F)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
setwd("~/GitHub/IODS-Final")
library(dplyr)
alc <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt ", header=T, sep=",")
dim(alc)
colnames(alc)
alc <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt ", header=T, sep=",")
dim(alc)
colnames(alc)
colnames(alc)
keep <- c("school", "sex", "age", "goout", "health", "absences", "G1", "G2", "G3", "alc_use", "high_use")
alcdata <- dplyr::select(alc, one_of(keep))
str(alcdata)
summary (alcdata)
write.csv(alcdata, file="alcdata", row.names = T)
setwd("~/GitHub/IODS-Final")
alcdata <- read.table("~/GitHub/IODS-Final/alcdata.csv", header=T, sep=",")
alcdata <- read.table("~/GitHub/IODS-Final/alcdata", header=T, sep=",")
dim(alcdata)
colnames(alcdata)
alcdata_ <- dplyr::select(alcdata, -X)
dim(alcdta_)
dim(alcdata_)
colnames(alcdata_)
View(multiplot)
dim(alcdata_)
g1 <- ggplot(alcdata_, aes(school)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
(ggplot2)
library(ggplot2)
library(GGally)
library(MASS)
library(corrplot)
library(tidyverse)
library(plotly)
library(dplyr)
library(FactoMineR)
require(ggplot2)
```{r, include= FALSE}
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
g1 <- ggplot(alcdata_, aes(school)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g2 <- ggplot(alcdata_, aes(sex)) + geom_bar()+ theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g3 <- ggplot(alcdata_, aes(age)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g4 <- ggplot(alcdata_, aes(goout)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g5 <- ggplot(alcdata_, aes(health)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g6 <- ggplot(alcdata_, aes(absences)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g7 <- ggplot(alcdata_, aes(alc_use)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g8 <- ggplot(alcdata_, aes(high_use)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g9 <- ggplot(alcdata_, aes(G1)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g10 <- ggplot(alcdata_, aes(G2)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g11 <- ggplot(alcdata_, aes(G3)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
multiplot(g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11 cols=3)
multiplot(g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, cols=3)
multiplot(g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, cols=4)
multiplot(g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, cols=5)
multiplot(g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, cols=2)
multiplot(g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, cols=6)
multiplot(g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, cols=4)
g6 <- ggplot(alcdata_, aes(absences)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g7 <- ggplot(alcdata_, aes(G2)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g8 <- ggplot(alcdata_, aes(G3)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g9 <- ggplot(alcdata_, aes(G1)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g10 <- ggplot(alcdata_, aes(alc_use)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g11 <- ggplot(alcdata_, aes(high_use)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
multiplot(g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, cols=4)
View(alcdata_)
colnames(alcdata_)
cor_matrix<-cor(alcdata_)
cor_matrix<-cor(alcdata)
datacps08 = t(matrix(scan("~/GitHub/Ekonometria 2017 kevät/CPS08.csv"),nrow=4))
colnames(datacps08) = c("AHE","bachelor","female","age")
AHE = datacps08[,"AHE"]
age = datacps08[,"age"]
newDataFrame <- data.frame(datacps08)
cor_matrix<-cor(newDataFrame)
cor_matrix %>% round(digits = 2)
wb <- c("white","black")
corrplot(cor_matrix, order="hclust", addrect=2, bg="gold2", col=wb)
colnames(datacps08)
dim(newDataFrame)
colnames(newDataFrame)
g1 <- ggplot(newDataFrame, aes(age)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g2 <- ggplot(newDataFrame, aes(female)) + geom_bar()+ theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g3 <- ggplot(newDataFrame, aes(AHE)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g4 <- ggplot(newDataFrame, aes(bachelor)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
multiplot(g1, g2, g3, g4, cols=4)
AHE
multiplot(g1, g2, g3, g4, cols=2)
multiplot(g1, g2, g3, g4, cols=4)
multiplot(g1, g2, g3, g4, cols=3)
g3 <- ggplot(newDataFrame, aes(AHE)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
multiplot(g1, g2, g3, g4, cols=3)
plot(AHE)
plot(ahe)
multiplot(g1, g2, g3, cols=3)
g1 <- ggplot(newDataFrame, aes(age)) + geom_bar() + theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g2 <- ggplot(newDataFrame, aes(female)) + geom_bar()+ theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
g3 <- ggplot(newDataFrame, aes(bachelor)) + geom_bar()+ theme_grey() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
multiplot(g1, g2, g3, cols=3)
g4 <- ggplot(AHE)
g4 <- ggplot(newDataFrame, aes(AHE)
g4
g4 <- ggplot(newDataFrame, aes(AHE))
g4
AHE
g4 <- ggplot(AHE, newDataFrame)
print(g4)
g4 <- ggplot(AHE, newDataFrame) + geom_bar()
print(g4)
setwd("~/GitHub/IODS-Final")
alc <- read.table("~/GitHub/IODS-Final/alcdata", header=T, sep=",")
dim(alc)
colnames(alc)
alcdata <- select(alc -X)
alcdata <- select(alc, -X)
dim(alcdata)
colnames(alcdata)
alc <- read.table("~/GitHub/IODS-Final/alcdata", header=T, sep=",")
alcdata_ <- select(alc, -X)
dim(alcdata_)
colnames(alcdata_)
cor_matrix<-cor(alcdata_)
cor_matrix %>% round(digits = 2)
wb <- c("white","black")
cor_matrix %>% round(digits = 2)
